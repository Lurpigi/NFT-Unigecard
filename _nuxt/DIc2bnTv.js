import{O as S,x as O,r as _,y as T,z as $,A as q,g}from"./CIMKAMhE.js";import{c as m}from"./Dw7Q0UDp.js";import{B as p,C as h}from"./ulqfyjqD.js";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const M=t=>typeof t<"u",I=S;function V(t){var n;const r=S(t);return(n=r==null?void 0:r.$el)!=null?n:r}function j(t){return JSON.parse(JSON.stringify(t))}function J(t,n,r,c={}){var o,s,e;const{clone:i=!1,passive:y=!1,eventName:l,deep:b=!1,defaultValue:P,shouldEmit:x}=c,u=O(),A=r||(u==null?void 0:u.emit)||((o=u==null?void 0:u.$emit)==null?void 0:o.bind(u))||((e=(s=u==null?void 0:u.proxy)==null?void 0:s.$emit)==null?void 0:e.bind(u==null?void 0:u.proxy));let d=l;d=d||`update:${n.toString()}`;const E=a=>i?typeof i=="function"?i(a):j(a):a,F=()=>M(t[n])?E(t[n]):P,N=a=>{x?x(a)&&A(d,a):A(d,a)};if(y){const a=F(),v=_(a);let f=!1;return T(()=>t[n],w=>{f||(f=!0,v.value=E(w),q(()=>f=!1))}),T(v,w=>{!f&&(w!==t[n]||b)&&N(w)},{deep:b}),v}else return $({get(){return F()},set(a){N(a)}})}function R(){const t=O(),n=_(),r=$(()=>{var e,i;return["#text","#comment"].includes((e=n.value)==null?void 0:e.$el.nodeName)?(i=n.value)==null?void 0:i.$el.nextElementSibling:V(n)}),c=Object.assign({},t.exposed),o={};for(const e in t.props)Object.defineProperty(o,e,{enumerable:!0,configurable:!0,get:()=>t.props[e]});if(Object.keys(c).length>0)for(const e in c)Object.defineProperty(o,e,{enumerable:!0,configurable:!0,get:()=>c[e]});Object.defineProperty(o,"$el",{enumerable:!0,configurable:!0,get:()=>t.vnode.el}),t.exposed=o;function s(e){n.value=e,e&&(Object.defineProperty(o,"$el",{enumerable:!0,configurable:!0,get:()=>e instanceof Element?e:e.$el}),t.exposed=o)}return{forwardRef:s,currentRef:n,currentElement:r}}function G(){return{getMyNFTs:async()=>{const r=g().public.proxyAddress;if(typeof window.ethereum>"u")throw new Error("Wallet non rilevato");await window.ethereum.request({method:"eth_requestAccounts"});const o=await new p(window.ethereum).getSigner(),s=new h(r,m,o),[e,i]=await s.getMyNFTs();return{ids:e,amounts:i}}}}function k(){const n=g().public.proxyAddress;if(typeof window.ethereum>"u")throw new Error("Wallet non rilevato");return new Promise(async(r,c)=>{try{await window.ethereum.request({method:"eth_requestAccounts"});const s=await new p(window.ethereum).getSigner(),i=await new h(n,m,s).getTotalMyNFTs();r(i)}catch(o){c(o)}})}async function z(){const n=g().public.proxyAddress;if(typeof window.ethereum>"u")throw new Error("Wallet non rilevato");return new Promise(async(r,c)=>{try{await window.ethereum.request({method:"eth_requestAccounts"});const s=await new p(window.ethereum).getSigner(),i=await new h(n,m,s).getPointer();r(i)}catch(o){c(o)}})}async function D(t,n){const c=g().public.proxyAddress;if(typeof window.ethereum>"u")throw new Error("Wallet non rilevato");try{await window.ethereum.request({method:"eth_requestAccounts"});const s=await new p(window.ethereum).getSigner(),e=new h(c,m,s),y=await e.MINT_FEE()*BigInt(n),l=await e.mint4To(t,n,{value:y});return await l.wait(),l}catch(o){throw o}}export{z as a,V as b,J as c,G as d,k as g,D as m,I as t,R as u};
